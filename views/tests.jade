extends layout
block content
    body.bgcolor
        p.carTitle Prove
        #chart
            h1
        div
            p.pText Siamo arrivati alla fine! A questo punto determinerete quante e quali prove dovrà affrontare il vostro protagonista. Di seguito indicate per ogni punto una possibile prova (come da esempio al punto 1.).
            form#testsForm.wheelform(method='POST', action='/start/registerTests')
                .block
                    label 1.
                    input(type='text' value='Risolvere un indovinello', required='',readonly='', name='test1', size='25')
                .block
                    label 2.
                    input(type='text', required='', name='test2', size='25')
                .block
                    label 3.
                    input(type='text', required='', name='test3', size='25')
                .block
                    label 4.
                    input(type='text', required='', name='test4', size='25')
                .block
                    label 5.
                    input(type='text', required='', name='test5', size='25')
                .block
                    label 6.
                    input(type='text', required='', name='test6', size='25')
                .block
                    label 7.
                    input(type='text', required='', name='test7', size='25')
                .block
                    label 8.
                    input(type='text', required='', name='test8', size='25')
                input#confirmTests(type='submit', value='Conferma')
            p.pText Una volta fatto, lanciate il dato: il risultato che otterrete corrisponderà al numero di prove da affrontare. Quindi, se dovesse uscire 3, girate la ruota della fortuna 3 volte. Il numero che uscirà sulla ruota a ogni girata corrisponderà alla prova che avete indicato al numero corrispondente!
            p#esito

            form(action='#', method='GET')
                button.nextButton(type='submit', disabled='') Avanti

        script(src='https://d3js.org/d3.v3.min.js', charset='utf-8')
        script(type='text/javascript', charset='utf-8').
            var padding = {top: 20, right: 40, bottom: 0, left: 0},
                w = 500 - padding.left - padding.right,
                h = 500 - padding.top - padding.bottom,
                r = Math.min(w, h) / 2,
                rotation = 0,
                oldrotation = 0,
                picked = 100000,
                oldpick = [],
                color = d3.scale.category20();//category20c()

            var data = [
                {
                    "label": "Prova 1",
                    "value": 0
                },
                {"label": "Prova 2", "value": 1},
                {
                    "label": "Prova 3",
                    "value": 2
                },
                {
                    "label": "Prova 4",
                    "value": 3
                },
                {"label": "Prova 5", "value": 4},
                {
                    "label": "Prova 6",
                    "value": 5
                },
                {
                    "label": "Prova 7",
                    "value": 6
                },
                {
                    "label": "Prova 8",
                    "value": 7
                }
            ];
            var svg = d3.select('#chart')
                .append("svg")
                .data([data])
                .attr("width", w*2 + padding.left + padding.right)
                .attr("height", h*2 + padding.top + padding.bottom);
            var container = svg.append("g")
                .attr("class", "chartholder")
                .attr("transform", "translate(" + (w / 1.2 + padding.left) + "," + (h + padding.top) + ")");
            var vis = container
                .append("g");
            var pie = d3.layout.pie().sort(null).value(function (d) {
                return 1;
            });
            // declare an arc generator function
            var arc = d3.svg.arc().outerRadius(r);
            // select paths, use arc generator to draw
            var arcs = vis.selectAll("g.slice")
                .data(pie)
                .enter()
                .append("g")
                .attr("class", "slice");
            arcs.append("path")
                .attr("fill", function (d, i) {
                    return color(i);
                })
                .attr("d", function (d) {
                    return arc(d);
                });
            // add the text
            arcs.append("text").attr("transform", function (d) {
                d.innerRadius = 0;
                d.outerRadius = r;
                d.angle = (d.startAngle + d.endAngle) / 2;
                return "rotate(" + (d.angle * 180 / Math.PI - 90) + ")translate(" + (d.outerRadius - 10) + ")";
            })
                .attr("text-anchor", "end")
                .text(function (d, i) {
                    return data[i].label;
                });
            //container.on("click", spin);
            function spin(d) {
                container.on("click", null);
                //all slices have been seen, all done
                console.log("OldPick: " + oldpick.length, "Data length: " + data.length);
                if (oldpick.length == data.length) {
                    console.log("done");
                    container.on("click", null);
                    return;
                }
                var ps = 360 / data.length,
                    pieslice = Math.round(1440 / data.length),
                    rng = Math.floor((Math.random() * 1440) + 360);
                rotation = (Math.round(rng / ps) * ps);
                picked = Math.round(data.length - (rotation % 360) / ps);
                picked = picked >= data.length ? (picked % data.length) : picked;
                if (oldpick.indexOf(picked) !== -1) {
                    d3.select(this).call(spin);
                    return;
                } else {
                    oldpick.push(picked);
                }
                rotation += 90 - Math.round(ps / 2);
                vis.transition()
                    .duration(3000)
                    .attrTween("transform", rotTween)
                    .each("end", function () {
                        //alert what is the result
                        alert("La tua fiaba si svolgera nel " + data[picked].label);
                        //registerFinalPlace(data[picked].value);
                        enableNext();
                        d3.select(".slice:nth-child(" + (picked + 1) + ") path")
                            .attr("fill", "#111");
                        oldrotation = rotation;
                        container.on("click", spin);
                    });
            }
            //make arrow
            svg.append("g")
                .attr("transform", "translate(" + (w*1.2 + padding.left + padding.right*3) + "," + ((h) + padding.top) + ")")
                .append("path")
                .attr("d", "M-" + (r * .15) + ",0L0," + (r * .05) + "L0,-" + (r * .05) + "Z")
                .style({"fill": "black"});
            //draw spin circle
            container.append("circle")
                .attr("cx", 0)
                .attr("cy", 0)
                .attr("r", 60)
                .style({"fill": "white", "cursor": "pointer"});
            //spin text
            container.append("text")
                .attr("x", 0)
                .attr("y", 15)
                .attr("text-anchor", "middle")
                .text("Ruota")
                .style({"font-weight": "bold", "font-size": "30px"});
            function rotTween(to) {
                var i = d3.interpolate(oldrotation % 360, rotation);
                return function (t) {
                    return "rotate(" + i(t) + ")";
                };
            }