extends layout
block content
    body.bgimg3
        p.gameTitle Minigioco 2 - Supera gli ostacoli
        p.textAllign In questo gioco per vincere dovrai riuscire a superare gli ostacoli, ovvero i muri verdi, e ottenere un punteggio minimo di 2000 punti. Per stare in aria premere sul pulsante “ACCELERA”.
        canvas#gameCanvas(width='480', height='300')
        form(action='/start/tests', method='GET')
            button.nextButton(type='submit', disabled='') Avanti

        script.
            var myGamePiece;
            var myObstacles = [];
            var myScore;
            function startGame() {
                myGamePiece = new component(30, 30, "red", 10, 120);
                myGamePiece.gravity = 0.05;
                myScore = new component("30px", "Consolas", "black", 280, 40, "text");
                myGameArea.start();
            }
            var myGameArea = {
                canvas : document.getElementById('gameCanvas'),
                start : function() {
                    this.context = this.canvas.getContext("2d");
                    this.frameNo = 0;
                    this.interval = setInterval(updateGameArea, 20);
                },
                clear : function() {
                    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
                }
            }
            function component(width, height, color, x, y, type) {
                this.type = type;
                this.scoreAcc = 0;
                this.width = width;
                this.height = height;
                this.speedX = 0;
                this.speedY = 0;
                this.x = x;
                this.y = y;
                this.gravity = 0;
                this.gravitySpeed = 0;
                this.update = function() {
                    var ctxAcc = myGameArea.context;
                    if (this.type == "text") {
                        ctxAcc.font = this.width + " " + this.height;
                        ctxAcc.fillStyle = color;
                        ctxAcc.fillText(this.text, this.x, this.y);
                    } else {
                        ctxAcc.fillStyle = color;
                        ctxAcc.fillRect(this.x, this.y, this.width, this.height);
                    }
                }
                this.newPos = function() {
                    this.gravitySpeed += this.gravity;
                    this.x += this.speedX;
                    this.y += this.speedY + this.gravitySpeed;
                    this.hitBottom();
                }
                this.hitBottom = function() {
                    var rockbottom = myGameArea.canvas.height - this.height;
                    if (this.y > rockbottom) {
                        this.y = rockbottom;
                        this.gravitySpeed = 0;
                    }
                }
                this.crashWith = function(otherobj) {
                    var myleft = this.x;
                    var myright = this.x + (this.width);
                    var mytop = this.y;
                    var mybottom = this.y + (this.height);
                    var otherleft = otherobj.x;
                    var otherright = otherobj.x + (otherobj.width);
                    var othertop = otherobj.y;
                    var otherbottom = otherobj.y + (otherobj.height);
                    var crash = true;
                    if ((mybottom < othertop) || (mytop > otherbottom) || (myright < otherleft) || (myleft > otherright)) {
                        crash = false;
                    }
                    return crash;
                }
            }
            function updateGameArea() {
                var x, height, gap, minHeight, maxHeight, minGap, maxGap;
                for (i = 0; i < myObstacles.length; i += 1) {
                    if (myGamePiece.crashWith(myObstacles[i])) {
                        console.log("---------- CRASH -----------");
                        clearInterval(myGameArea.interval);
                        checkstatusAcceleration(myGameArea.frameNo);
                        return false;
                    }
                }
                myGameArea.clear();
                myGameArea.frameNo += 1;
                if (myGameArea.frameNo == 1 || everyinterval(150)) {
                    x = myGameArea.canvas.width;
                    minHeight = 20;
                    maxHeight = 200;
                    height = Math.floor(Math.random()*(maxHeight-minHeight+1)+minHeight);
                    minGap = 50;
                    maxGap = 200;
                    gap = Math.floor(Math.random()*(maxGap-minGap+1)+minGap);
                    myObstacles.push(new component(10, height, "green", x, 0));
                    myObstacles.push(new component(10, x - height - gap, "green", x, height + gap));
                }
                for (i = 0; i < myObstacles.length; i += 1) {
                    myObstacles[i].x += -1;
                    myObstacles[i].update();
                }

                myScore.text="Punteggio: " + myGameArea.frameNo;
                myScore.update();
                myGamePiece.newPos();
                myGamePiece.update();
            }
            function everyinterval(n) {
                if ((myGameArea.frameNo / n) % 1 == 0) {
                    return true;
                }
                return false;
            }
            function accelerate(n) {
                myGamePiece.gravity = n;
            }
        br
        div.accbuttons
            button.newGame(type='button' onclick='startGame()') INIZIA
            button(onmousedown='accelerate(-0.2)', onmouseup='accelerate(0.05)') ACCELERA

